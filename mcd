# ============================================================================================ #
#: Title           : mcd                                                                       #
#: Sypnosis        : mcd [OPTIONS]...                                                          #
#: Date Created    : Wed Feb 11 19:04:04 PHT 2015 / Wed Feb 11 11:04:04 UTC 2015               #
#: Last Edit       : Tue 06 Feb 2018 15:46:37 PM +08  /  Tue Feb  6 07:46:37 UTC 2018          #
#: License         : GPLv3                                                                     #
#: Version         : 3.4.1                                                                     #
#: Author          : Jason V. Ferrer '<jetchisel@opensuse.org>'                                #
#: Description     : A shell function that allows user to navigate to the previous directories #
#: Options         : [-a|--about] [-c|--clear] [-h|--help] [-n|--no-color]                     #
#: Home Page       : https://github.com/Jetchisel/mcd                                          #
#: ExtComm         : cat,clear,git,tput                                                        #
# ============================================================================================ #

____D_i_r_S_t_a_c_k____s=()

cd() {
  local f options directory return_status

  for f; do
    [[ ! -d $f ]] && options+=("$f")
    [[ -d $f ]] && directory+=("$f")
  done

  if (( ${#options[@]} && ${#directory[@]} )); then
    builtin cd "${options[@]}" "$directory" && ____D_i_r_S_t_a_c_k____s+=("${PWD//$'\n'/\\n}")
  elif (( ! ${#options[@]} && ${#directory[@]} )); then
    builtin cd "$directory" && ____D_i_r_S_t_a_c_k____s+=("${PWD//$'\n'/\\n}")
  elif (( ! ${#directory[@]} && ${#options[@]} )); then
    builtin cd "${options[@]}"
  else
    builtin cd "$HOME" && ____D_i_r_S_t_a_c_k____s+=("${PWD//$'\n'/\\n}")
  fi

  return_status=$?


  if (( ! return_status )); then
    if [[ ${options[0]} = "-" ]]; then
      __mcd__c__l__e__a__r__
      printf '%s\n' "${PWD//$'\n'/\\n}" &&  __mcd__c__h__e__c__k__g__i__t
    elif [[ ! ${options[0]} = "-" ]]; then
      __mcd__c__l__e__a__r__
      __mcd__c__h__e__c__k__g__i__t
    fi
  fi

  return "$return_status"
}

mcd() {
  if ! shopt -q extglob; then
    shopt -s extglob
  fi

  if (( BASH_VERSINFO[0] < 4 )); then
    printf >&2 'This function requires bash 4.0 or newer\n'
    return 1
  fi

  declare -A _AssocDirs_ Unique
  declare -a Dirs options RangeMessage

  local b bb dest empty_line dirst f gb i j k n REPLY reset prompts yb

  if type -P tput >/dev/null; then
    b=$(tput bold)
    reset=$(tput sgr0)
    gb=$(tput setaf 2; printf '%s' "$b")
    bb=$(tput setaf 4; printf '%s' "$b")
    yb=$(tput setaf 3; printf '%s' "$b")
  fi


  while (($#)); do
    case $1 in
      --no-color|-n)
         unset b bb gb reset yb
         break
         ;;
      --about|-a)
         ___mcd__a__b__o__u__t
         return
         ;;
      --clear|-c)
         unset ____D_i_r_S_t_a_c_k____s && __mcd__c__l__e__a__r__
         printf '%s\n' "Directory stack is now empty!"
         return
         ;;
      --help|-h|-?)
         ___mcd___U___s___a___g___e___
         return
         ;;
         *)
         ___mcd___U___s___a___g___e___ >&2
         return 1
         ;;
    esac
  done

  dirst=$(pwd -P; printf x)
  dirst=${dirst%$'\nx'}

  for k in "${____D_i_r_S_t_a_c_k____s[@]}"; do
    [[ $k = @("${PWD//$'\n'/\\n}"|$dirst) ]] && continue
    Unique["$k"]=
  done
  Dirs=("${!Unique[@]}")

  ___mcd__m__e__n__u___() {
    __mcd__c__l__e__a__r__
    printf '%s %s\n' "${yb}Current directory:$reset" "$bb${PWD//$'\n'/\\n}$reset"
    printf '%s\n' "${empty_line+""}"
    n=1
    for i; do
      printf "$gb%3d.$reset %s\n" "$n" "$bb$i$reset"
      _AssocDirs_["$((n++))"]="$i"
    done
  }

  Dirs+=("$reset${yb}Quit$reset")
  printf -v prompts '\n%s' "$yb[${gb}1${reset}${yb}-$reset$gb${#Dirs[@]}$reset$yb] ==>$reset "

  ___mcd__m__e__n__u___ "${Dirs[@]}"

  if (( ${#Dirs[@]} <= 9 )); then
    options=(-r -p "$prompts" -s -n 1)
  else
    options=(-r -p "$prompts")
  fi

  read "${options[@]}"

  case $REPLY in
    [Qq]|[Qq][Uu][Ii][Tt]|${#Dirs[@]}|'')
       __mcd__c__l__e__a__r__
       printf '%s %s\n' "${yb}Directory not changed:$reset" "$bb${PWD//$'\n'/\\n}$reset"
       return
       ;;
    *[!0-9]*|0*)
       __mcd__c__l__e__a__r__
       printf '%s [%s]\n' "${b}Unknown response!$reset" "$gb$REPLY$reset" >&2
       return 1
       ;;
  esac

  RangeMessage=("$gb$REPLY$reset" "${gb}1$reset" "$gb${#Dirs[@]}$reset")

  if (( REPLY > ${#Dirs[@]} )); then
    __mcd__c__l__e__a__r__
    printf "[%s] ${yb}not in range from$reset [%s-%s] \n" "${RangeMessage[@]}" >&2
    return 1
  fi

  for j in "${!_AssocDirs_[@]}"; do
    [[ $REPLY = $j ]] && dest=${_AssocDirs_[$REPLY]//\\n/$'\n'}
  done

  cd "$dest"


}

__mcd__c__h__e__c__k__g__i__t() {
  if type -P git >/dev/null; then
    git rev-parse 2>/dev/null && printf '%s\n\n' "GIT repository detected." && git status
    return "$return_status"
  fi
}

__mcd__c__l__e__a__r__() {
  type -P clear >/dev/null && command clear
}

___mcd__a__b__o__u__t() {
  __mcd__c__l__e__a__r__
  cat <<EOF

                            Mcd

Copyright  2015-2018 Jason V. Ferrer  '<jetchisel@opensuse.org>'

A bash  shell function that allows the  user to easily  navigate
back  to the currently remembered  directories by  providing the
corresponding  number, with or without autocd enabled.  It lists
a  menu  of  the  currently  remembered   directories. Duplicate
directories are discarded  in the menu.  When sourced it has its
own "cd" and its own directory  stack. (overriding the builtins)

It tries to work around directories with embedded newlines which
the  builtin  "dirs" can't  handle  in some  cases. If the "git"
utility is installed the status of the git repo is printed  once
inside the directory/repository.

This  program is  free software;  you can redistribute it and/or
modify  it  under  the terms  of the  GNU General Public License
version 3 as published by the Free Software Foundation.

This program is  distributed in the hope that it will be useful,
but WITHOUT  ANY WARRANTY; without even the  implied warranty of
MERCHANTABILITY  or  FITNESS  FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

EOF
}

___mcd___U___s___a___g___e___() {
  __mcd__c__l__e__a__r__
  cat <<EOF

Usage: mcd [OPTIONS]...

Navigate  back  to  the currently   remembered   directories  by
providing the  corresponding number in the menu. With or without
autocd enabled.

Options:
  -a, --about      Show a brief info about mcd.
  -c, --clear      clear the directory stack.
  -h, --help       Show this help.
  -n, --no-color   Print the default terminal fonts.
                   (Do not print bold/colored font).

Without an option  and if the  "tput" utility  is  installed, by
default  the fonts are bold  and  colored. If the  "git" utility
is installed  the status  of the git  repository is printed once
inside the directory/repository.

EOF
}
