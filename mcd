# ============================================================================================ #
#: Title           : mcd                                                                       #
#: Sypnosis        : mcd                                                                       #
#: Date Created    : Wed Feb 11 19:04:04 PHT 2015 / Wed Feb 11 11:04:04 UTC 2015               #
#: Last Edit       : Fri Mar 20 16:15:01 PHT 2015 / Fri Mar 20 08:15:01 UTC 2015               #
#: License         : GPLv3                                                                     #
#: Version         : 1.7.3-fixnewline                                                          #
#: Author          : Jason V. Ferrer '<jetchisel@opensuse.org>'                                #
#: Description     : A function that list a menu of recently visited directories.              #
#: Options         : NONE                                                                      #
#: Home Page       : https://github.com/Jetchisel/mcd                                          #
#: ExtComm         : clear,git,tput                                                            #
# ============================================================================================ #

____D_i_r_S_t_a_c_k____s=()

cd() {
  local f options directory status

  for f; do
    [[ ! -d $f ]] && options+=("$f")
    [[ -d $f ]] && directory+=("$f")
  done

  if (( ${#options[@]} && ${#directory} )); then
    builtin cd "${options[@]}" "$directory" && ____D_i_r_S_t_a_c_k____s+=("${PWD//$'\n'/\\n}")
  elif (( ! ${#options[@]} && ${#directory} )); then
    builtin cd "$directory" && ____D_i_r_S_t_a_c_k____s+=("${PWD//$'\n'/\\n}")
  elif (( ! ${#directory} && ${#options[@]} )); then
    builtin cd "${options[@]}"
  else
    builtin cd "$HOME" && ____D_i_r_S_t_a_c_k____s+=("${PWD//$'\n'/\\n}")
  fi

  status=$?

  if (( ! status )) && type -P git >/dev/null; then
    git rev-parse 2>/dev/null && printf '%s\n' "Git repository detected." && git status
    return "$status"
  fi

  return "$status"
}

mcd() {
  shopt -s extglob

  LocalVars=(
    b bb dest dir dirst Dirs Dir f gb LocalVars PlusOne newline
    reset UniqueDirs options prompts yb k j RangeMessage line
  )

  local "${LocalVars[@]}"

  declare -A _AssocDirs_ Unique

  if type -P tput >/dev/null; then
    b=$(tput bold)
    reset=$(tput sgr0)
    gb=$(tput setaf 2; printf '%s' "$b")
    bb=$(tput setaf 4; printf '%s' "$b")
    yb=$(tput setaf 3; printf '%s' "$b")
  fi

  dirst=$(pwd -P; printf x)
  dirst=${dirst%$'\nx'}

  for k in "${____D_i_r_S_t_a_c_k____s[@]}"; do
    [[ $k = @("${PWD//$'\n'/\\n}"|$dirst) ]] && continue
    Unique["$k"]=
  done
  Dirs=("${!Unique[@]}")

  __Menu__() {
    local n=1 i
    for i; do
      printf "$gb%3d.$reset %s\n" "$n" "$bb$i$reset"
      _AssocDirs_["$((n++))"]="$i"
    done
  }

  Dirs+=("$reset${yb}Quit$reset")
  printf -v prompts '\n%s' "$yb[${gb}1${reset}${yb}-$reset$gb${#Dirs[@]}$reset$yb] ==>$reset "
  clear
  printf '%s %s\n' "${yb}Current Location:$reset" "$bb${PWD//$'\n'/\\n}$reset"
  printf '%s\n' "${empty_line+""}"

  __Menu__ "${Dirs[@]}"

  if (( ${#Dirs[@]} <= 9 )); then
    options=(-r -p "$prompts" -s -n 1)
  else
    options=(-r -p "$prompts")
  fi

  read "${options[@]}"

  case $REPLY in
     [Qq]|[Qq][Uu][Ii][Tt]|${#Dirs[@]}|'')
         clear && printf '%s %s\n' "${yb}Location not changed$reset" "$bb${PWD//$'\n'/\\n}$reset"
         return
         ;;
      *[!0-9]*|0*)
         clear && printf '%s [%s]\n' "${b}Unknown response!$reset" "$gb$REPLY$reset" >&2
         return 1
         ;;
  esac

  RangeMessage=("$gb$REPLY$reset" "${gb}1$reset" "$gb${#Dirs[@]}$reset")

  if (( REPLY > ${#Dirs[@]} )); then
    clear && printf "[%s] ${yb}not in range from$reset [%s-%s] \n" "${RangeMessage[@]}" >&2
    return 1
  fi

  for j in "${!_AssocDirs_[@]}"; do
    [[ $REPLY = $j ]] && clear
    cd "${_AssocDirs_[$REPLY]//\\n/$'\n'}"
  done

  return 0
}
