# ============================================================================================ #
#: Title           : mcd                                                                       #
#: Sypnosis        : mcd                                                                       #
#: Date Created    : Wed Feb 11 19:04:04 PHT 2015 / Wed Feb 11 11:04:04 UTC 2015               #
#: Last Edit       : Mon Feb 16 05:33:27 PHT 2015 / Sun Feb 15 21:33:27 UTC 2015               #
#: License         : GPLv3                                                                     #
#: Version         : 1.4.1                                                                     #
#: Author          : Jason V. Ferrer '<jetchisel@opensuse.org>'                                #
#: Description     : A function that list a menu of recently visited directories.              #
#: Options         : NONE                                                                      #
#: Home Page       : https://github.com/Jetchisel/mcd                                          #
#: ExtComm         : clear,tput                                                                #
# ============================================================================================ #

mcd() {
  shopt -s extglob

  local  _AssocDirs_ b bb dest dir dirst Dirs Dir f gb i PlusOne
  local  n reset Unique UniqueDirs options prompts yb k j

  declare -A _AssocDirs_ Unique

  b=$(tput bold)
  reset=$(tput sgr0)
  gb=$(tput setaf 2 && tput bold)
  bb=$(tput setaf 4 && tput bold)
  yb=$(tput setaf 3 && tput bold)
  dirst=$(pwd -P; printf x)
  dirst=${dirst%$'\nx'}

  mapfile -t Dir < <(dirs -l -p)

  for k in "${Dir[@]}"; do
    [[ $k = @($PWD|$dirst) ]] && continue
    Unique["$k"]=
  done
  Dirs=("${!Unique[@]}")

  __Menu__() {
    n=1
    for i; do
      printf "$gb%3d.$reset %s\n" "$n" "$bb$i$reset"
      _AssocDirs_["$n"]="$i"
      ((n++))
    done
  }

  PlusOne=$(( ${#Dirs[@]} + 1 ))

  printf -v prompts '\n%s' "$yb[${gb}1${reset}${yb}-$reset$gb$PlusOne$reset$yb] ==>$reset "
  clear
  printf '%s %s\n' "${yb}Current Location:$reset" "$bb$PWD$reset"
  printf '%s\n' "${empty_line+""}"

  Dirs=("${Dirs[@]}" "$reset${yb}Quit$reset")
  __Menu__ "${Dirs[@]}"

  if (( ${#Dirs[@]} <= 9 )); then
    options=(-r -p "$prompts" -s -n 1)
  else
    options=(-r -p "$prompts")
  fi

  read "${options[@]}"

  case $REPLY in
     [Qq]|[Qq][Uu][Ii][Tt]|${#Dirs[@]}|'')
         clear
         printf '%s %s\n' "${yb}Location not changed$reset" "$bb$PWD$reset"
         return
         ;;
      *[!0-9]*)
         clear
         printf '%s [%s]\n' "${b}Unknown response!$reset" "$gb$REPLY$reset" >&2
         return 1
         ;;
  esac

  if (( REPLY > ${#Dirs[@]} )) || [[ $REPLY = 0* ]]; then
    clear
    printf "[%s] ${yb}not in range from$reset [%s-%s] \n" "$gb$REPLY$reset" "${gb}1$reset" "$gb${#Dirs[@]}$reset" >&2
    return 1
  fi

  for j in "${!_AssocDirs_[@]}"; do
    if [[ $REPLY = $j ]]; then
      if  builtin pushd "${_AssocDirs_[$REPLY]}" >/dev/null; then
        clear
        printf '%s %s\n' "${b}Now in directory$reset" "$bb$PWD$reset"
      fi
    fi
  done

  return 0
}
